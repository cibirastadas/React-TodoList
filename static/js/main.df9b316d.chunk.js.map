{"version":3,"sources":["components/TodoForm/TodoForm.module.css","components/TodoBlock/TodoBlock.module.css","App.module.css","container/TodoList.module.css","components/Caption/Caption.module.css","components/Button/Button.js","components/TodoBlock/TodoBlock.js","components/TodoForm/TodoForm.js","container/TodoList.js","components/Caption/Caption.js","App.js","index.js"],"names":["module","exports","Button","props","parameter","className","style","onClick","handleButtonClick","children","event","TodoBlock","classes","listBlock","completed","taskCompleted","text","buttons","complete","handleButtonCompleted","id","delete","handleButtonDelete","TodoForm","todoForm","textInput","type","todoText","value","data","task","name","onChange","handleChange","placeholder","insert","selection","option","allTodo","filter","selected","map","selectedx","key","todo","list","handleSection","TodoList","state","fall","target","setState","preventDefault","newTask","uuidv4","prevState","newList","todoList","this","Component","Caption","caption","App","rootContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df9b316d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoForm\":\"TodoForm_todoForm__3J4jf\",\"insert\":\"TodoForm_insert__3SDV6\",\"textInput\":\"TodoForm_textInput__3yqLJ\",\"selection\":\"TodoForm_selection__1OVVc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listBlock\":\"TodoBlock_listBlock__32oAT\",\"taskCompleted\":\"TodoBlock_taskCompleted__6vigy\",\"buttons\":\"TodoBlock_buttons__-bQmO\",\"complete\":\"TodoBlock_complete__ziNEc\",\"delete\":\"TodoBlock_delete__2Uqnw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootContainer\":\"App_rootContainer__2YGHk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"TodoList_todoList__1jO0D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"Caption_caption__AbPdW\"};","import React from \"react\"\r\nconst Button = (props)=>{\r\n    return(\r\n        <>\r\n            {\r\n                props.parameter ? \r\n                <button   className={props.style} onClick={()=> props.handleButtonClick(props.parameter)}>{props.children}</button> :\r\n                <button   className={props.style} onClick={(event)=> props.handleButtonClick(event)}>{props.children}</button>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Button","import React from \"react\"\r\nimport classes from \"./TodoBlock.module.css\"\r\nimport Button from \"../Button/Button\"\r\nconst TodoBlock = (props)=>{\r\n    return(\r\n        \r\n        <div className={`${classes.listBlock}`}>\r\n            <ul className={props.completed ? classes.taskCompleted : null}>\r\n                <li>{props.text}</li>\r\n            </ul>\r\n            <div className={classes.buttons}>\r\n                <Button style={classes.complete} handleButtonClick={props.handleButtonCompleted} parameter={props.id}><i className=\"fas fa-check\"></i></Button>\r\n                <Button style={classes.delete} handleButtonClick={props.handleButtonDelete} parameter={props.id}><i className=\"far fa-trash-alt\"></i></Button>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoBlock","import React from \"react\"\r\nimport classes from \"./TodoForm.module.css\"\r\nimport TodoBlock from \"../TodoBlock/TodoBlock\"\r\nimport Button from \"../Button/Button\"\r\n\r\n\r\nconst TodoForm=(props)=>{\r\n\r\n    const handleSection = () => {\r\n        switch(props.option){\r\n            case \"all\":\r\n                return(\r\n                    props.allTodo.filter((selected)=> selected).map(selectedx=><TodoBlock \r\n                    key={selectedx.id} \r\n                    id={selectedx.id} \r\n                    text={selectedx.text} \r\n                    completed={selectedx.completed} \r\n                    handleButtonDelete={props.handleButtonDelete} \r\n                    handleButtonCompleted={props.handleButtonCompleted}\r\n                          />)\r\n                )           \r\n            case \"completed\":\r\n                return(\r\n                    props.allTodo.filter((selected)=> selected.completed===true).map(selectedx=><TodoBlock \r\n                        key={selectedx.id} \r\n                        id={selectedx.id} \r\n                        text={selectedx.text} \r\n                        completed={selectedx.completed} \r\n                        handleButtonDelete={props.handleButtonDelete} \r\n                        handleButtonCompleted={props.handleButtonCompleted} />)\r\n                )\r\n            case \"uncompleted\":\r\n                return(\r\n                    props.allTodo.filter((selected)=> selected.completed === false).map(selectedx=><TodoBlock \r\n                        key={selectedx.id} \r\n                        id={selectedx.id} \r\n                        text={selectedx.text} \r\n                        completed={selectedx.completed} \r\n                        handleButtonDelete={props.handleButtonDelete} \r\n                        handleButtonCompleted={props.handleButtonCompleted} />)\r\n                )\r\n            default:\r\n                return(\r\n                props.data.todo.map((list)=> \r\n                <TodoBlock \r\n                data={props.data}\r\n                key={list.id} \r\n                id={list.id} \r\n                text={list.text} \r\n                completed={list.completed} \r\n                handleButtonDelete={props.handleButtonDelete} \r\n                handleButtonCompleted={props.handleButtonCompleted} />)\r\n                )\r\n        }\r\n    }\r\n    return(\r\n        <div className={classes.todoForm}>\r\n            <form>\r\n                <div className={classes.textInput}>\r\n                    <input \r\n                    type=\"text\" \r\n                    className={classes.todoText} \r\n                    value={props.data.task} \r\n                    name=\"task\" \r\n                    onChange={(event)=>props.handleChange(event)}\r\n                    placeholder=\"Iveskite uzduoti\"\r\n                    />\r\n                    <Button  style={classes.insert} handleButtonClick={props.handleButtonClick}><i className=\"fas fa-arrow-down\"></i></Button>\r\n                </div>\r\n                <div className={classes.selection}>\r\n                    <select name=\"option\" value={props.option} onChange={(event)=>props.handleChange(event)}>\r\n                        <option value=\"\">Filtruoti</option>\r\n                        <option value=\"all\">Visi</option>\r\n                        <option value=\"completed\">Pabaigti</option>\r\n                        <option value=\"uncompleted\">Nebaigti</option>\r\n                    </select>\r\n                </div>\r\n            </form>\r\n            {handleSection()}                \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TodoForm","import React, {Component} from \"react\"\r\nimport TodoForm from \"../components/TodoForm/TodoForm\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport classes from \"./TodoList.module.css\"\r\nclass TodoList extends Component{\r\n\r\n    state= {\r\n        task : \"\",\r\n        todo : [],\r\n        option:  \"\",\r\n        allTodo: [],\r\n        fall : false\r\n    }\r\n\r\n    handleChange = (event)=>{\r\n        const { name, value} = event.target\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    handleButtonClick=(event)=>{\r\n        event.preventDefault()\r\n        const newTask={\r\n            id : uuidv4(),\r\n            text : this.state.task,\r\n            completed : false\r\n        }\r\n        this.setState(prevState=>{\r\n            return{\r\n                todo : [...prevState.todo, newTask],\r\n                allTodo : [...prevState.todo, newTask],\r\n                task : \"\"\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    handleButtonDelete = (id)=>{\r\n        const newList = this.state.todo.filter(task=> task.id !== id)\r\n        this.setState({\r\n            todo : newList,\r\n            allTodo : newList,\r\n            fall : !this.setState.fall\r\n        })\r\n    }\r\n\r\nhandleButtonCompleted = (id)=>{\r\n    const taskCompleted = this.state.todo.map(task=>{\r\n        if(id === task.id)\r\n        {\r\n            task.completed = task.completed ? !task.completed : !task.completed\r\n        }\r\n        return task\r\n    })\r\n    this.setState({todo : taskCompleted})\r\n}\r\n\r\n   \r\n    render(){\r\n        return(\r\n            <div className={classes.todoList}>\r\n                <TodoForm data={this.state} allTodo={this.state.allTodo} option={this.state.option} handleChange={this.handleChange} handleButtonClick={this.handleButtonClick} handleButtonDelete={this.handleButtonDelete} handleButtonCompleted={this.handleButtonCompleted} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList","import React from \"react\"\r\nimport classes from \"./Caption.module.css\"\r\n\r\nconst Caption = (props) => {\r\n    return(\r\n        <h1 className={classes.caption}>{props.text}</h1>\r\n    )\r\n\r\n}\r\n\r\nexport default Caption","import React from 'react'\nimport classes from \"./App.module.css\"\nimport TodoList from \"./container/TodoList\"\nimport Caption from \"./components/Caption/Caption\"\nfunction App() {\n  return (\n\n    <div className={classes.rootContainer}>\n      <Caption text=\"Mano užduočių sarašas\"/>\n      <TodoList />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}